// Services/ByteLetters.cs
using System.Collections.Generic;
using System.Linq;

namespace LedConnector.Services
{
    public class ByteLetters
    {
        private readonly Dictionary<string, string> byteLetters = new()
        {
            { "A", "0000000000000000011001001011110100101001000000000000000" },
            { "B", "0000000000000000111001001011100100101110000000000000000" },
            { "C", "0000000000000000011101000010000100000111000000000000000" },
            { "D", "0000000000000000111001001010010100101110000000000000000" },
            { "E", "0000000000000000111101000011100100001111000000000000000" },
            { "F", "0000000000000000111101000011100100001000000000000000000" },
            { "G", "0000000000000000011101000010110100100111000000000000000" },
            { "H", "0000000000000000100101001011110100101001000000000000000" },
            { "I", "0000000000000000100001000010000100001000000000000000000" },
            { "J", "0000000000000000000100001000010100100110000000000000000" },
            { "K", "0000000000000000100101010011000101001001000000000000000" },
            { "L", "0000000000000000100001000010000100001110000000000000000" },
            { "M", "0000000000000001000111011101011000110001000000000000000" },
            { "N", "0000000000000000100101101010110100101001000000000000000" },
            { "O", "0000000000000000011001001010010100100110000000000000000" },
            { "P", "0000000000000000111001001011100100001000000000000000000" },
            { "Q", "0000000000000000011001001010010101100111000000000000000" },
            { "R", "0000000000000000111001001011100101001001000000000000000" },
            { "S", "0000000000000000011101000001100000101110000000000000000" },
            { "T", "0000000000000000111000100001000010000100000000000000000" },
            { "U", "0000000000000000100101001010010100101111000000000000000" },
            { "V", "0000000000000000101001010010100101000100000000000000000" },
            { "W", "0000000000000001000110001100011010101010000000000000000" },
            { "X", "0000000000000000101001010001000101001010000000000000000" },
            { "Y", "0000000000000000101001010011100010000100000000000000000" },
            { "Z", "0000000000000000111100001000100010001111000000000000000" },
            { " ", "0000000000000000000000000000000000000000000000000000000" }
        };

        public string GetByteLetter(string letter) => byteLetters[letter.ToUpper()];

        public string TranslateToBytes(string message)
        {
            var binaryMessage = string.Join("", message.ToUpper().Select(c => GetByteLetter(c.ToString())));
            return binaryMessage;
        }
    }
}